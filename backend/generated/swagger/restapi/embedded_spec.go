// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Title",
    "title": "Test iam",
    "version": "1.0.0"
  },
  "basePath": "/api/v1",
  "paths": {
    "/health": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Healthcheck endpoint",
        "operationId": "GetHealth",
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "description": "Login",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Auth"
        ],
        "operationId": "Login",
        "parameters": [
          {
            "description": "Login Payload",
            "name": "login",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TokenPair"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/refresh": {
      "post": {
        "description": "Refresh token",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Auth"
        ],
        "operationId": "Refresh",
        "parameters": [
          {
            "description": "Refresh Payload",
            "name": "refresh",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RefreshToken"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TokenPair"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/me/roles": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Get user roles",
        "tags": [
          "User"
        ],
        "operationId": "GetUserRoles",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AccessToken": {
      "type": "string"
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "Error message",
          "type": "string"
        }
      }
    },
    "LoginInfo": {
      "type": "object",
      "properties": {
        "password": {
          "description": "Password",
          "type": "string",
          "example": 1234
        },
        "username": {
          "description": "Username",
          "type": "string",
          "example": "test"
        }
      }
    },
    "RefreshToken": {
      "type": "string"
    },
    "TokenPair": {
      "type": "object",
      "properties": {
        "AccessToken": {
          "$ref": "#/definitions/AccessToken"
        },
        "RefreshToken": {
          "$ref": "#/definitions/RefreshToken"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Title",
    "title": "Test iam",
    "version": "1.0.0"
  },
  "basePath": "/api/v1",
  "paths": {
    "/health": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Healthcheck endpoint",
        "operationId": "GetHealth",
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "description": "Login",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Auth"
        ],
        "operationId": "Login",
        "parameters": [
          {
            "description": "Login Payload",
            "name": "login",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TokenPair"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/refresh": {
      "post": {
        "description": "Refresh token",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Auth"
        ],
        "operationId": "Refresh",
        "parameters": [
          {
            "description": "Refresh Payload",
            "name": "refresh",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RefreshToken"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TokenPair"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/me/roles": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Get user roles",
        "tags": [
          "User"
        ],
        "operationId": "GetUserRoles",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AccessToken": {
      "type": "string"
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "Error message",
          "type": "string"
        }
      }
    },
    "LoginInfo": {
      "type": "object",
      "properties": {
        "password": {
          "description": "Password",
          "type": "string",
          "example": 1234
        },
        "username": {
          "description": "Username",
          "type": "string",
          "example": "test"
        }
      }
    },
    "RefreshToken": {
      "type": "string"
    },
    "TokenPair": {
      "type": "object",
      "properties": {
        "AccessToken": {
          "$ref": "#/definitions/AccessToken"
        },
        "RefreshToken": {
          "$ref": "#/definitions/RefreshToken"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
}

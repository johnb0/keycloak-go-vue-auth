// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"test_iam/generated/swagger/models"
)

// RefreshOKCode is the HTTP code returned for type RefreshOK
const RefreshOKCode int = 200

/*
RefreshOK Success

swagger:response refreshOK
*/
type RefreshOK struct {

	/*
	  In: Body
	*/
	Payload *models.TokenPair `json:"body,omitempty"`
}

// NewRefreshOK creates RefreshOK with default headers values
func NewRefreshOK() *RefreshOK {

	return &RefreshOK{}
}

// WithPayload adds the payload to the refresh o k response
func (o *RefreshOK) WithPayload(payload *models.TokenPair) *RefreshOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the refresh o k response
func (o *RefreshOK) SetPayload(payload *models.TokenPair) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RefreshOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
RefreshDefault Unexpected error.

swagger:response refreshDefault
*/
type RefreshDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRefreshDefault creates RefreshDefault with default headers values
func NewRefreshDefault(code int) *RefreshDefault {
	if code <= 0 {
		code = 500
	}

	return &RefreshDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the refresh default response
func (o *RefreshDefault) WithStatusCode(code int) *RefreshDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the refresh default response
func (o *RefreshDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the refresh default response
func (o *RefreshDefault) WithPayload(payload *models.Error) *RefreshDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the refresh default response
func (o *RefreshDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RefreshDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
